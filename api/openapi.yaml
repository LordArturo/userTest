openapi: 3.1.0
info:
  title: User-Account
  version: '1.0'
servers:
  - url: 'https://i3rjqay0v2.execute-api.us-east-1.amazonaws.com'
paths:
  '/users/{userId}':
    get:
      summary: Get user profile information
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserProfile'
                  code:
                    type: string
                  msg:
                    type: string
                  date:
                    type: string
      operationId: getUsersUserId
      description: Get user profile information
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/DefaultController
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
    put:
      summary: Update info
      operationId: putUsersUserId
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/DefaultController
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  msg:
                    type: string
                  data:
                    type: string
                  date:
                    type: string
      description: Update info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
  /users:
    get:
      summary: Get users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  msg:
                    type: string
                  data:
                    type:
                      - string
                      - array
                    items:
                      $ref: '#/components/schemas/UserProfile'
                  date:
                    type: string
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      operationId: getUsers
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/DefaultController
      parameters: []
      description: Get user list
    post:
      summary: Create user info
      operationId: postUsers
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/DefaultController
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  msj:
                    type: string
                  data:
                    type: string
                  date:
                    type: string
          headers: {}
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
components:
  schemas:
    UserProfile:
      title: UserProfile
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        surmane:
          type: string
        secondSurname:
          type: string
        gender:
          type: integer
        birthDate:
          type: string
        cityOfBirth:
          type: integer
        countryOfBirth:
          type: integer
        professionOrOccupation:
          type: integer
        nationality:
          type: integer
        homeCity:
          type: integer
        address:
          type: string
        photoUrl:
          type: string
        verificationStatus:
          $ref: '#/components/schemas/VerificationStatus'
        status:
          type: string
    InputDescriptionFile:
      type: array
      description: ''
      uniqueItems: true
      x-examples:
        example-1:
          - inputType: document-photo
            data:
              type: national-id
              country: US
              page: front
              filename: US_CA_DL_FRONT.jpg
      items:
        type: object
        properties:
          inputType:
            type: string
          data:
            type: object
            required:
              - type
              - country
              - page
              - filename
            properties:
              type:
                type: string
              country:
                type: string
              page:
                type: string
              filename:
                type: string
        required:
          - inputType
          - data
    VerificationStatus:
      title: VerificationResponse
      type: object
      properties:
        id:
          type: string
        documentIdStatus:
          type: string
        selfieStatus:
          type: string
        verificationUserStatus:
          type: string
        servicesDocumentStatus:
          type: string
        observations:
          type: string
    UserCreate:
      title: UserCreate
      type: object
      examples:
        - firstName: string
          middleName: string
          surmane: string
          secondSurname: string
          gender: string
          birthDate: string
          cityOfBirth: string
          countryOfBirth: string
          professionOrOccupation: string
          nationality: string
          homeCity: 0
          address: string
      properties:
        firstName:
          type: string
        middleName:
          type: string
        surmane:
          type: string
        secondSurname:
          type: string
        gender:
          type: integer
        birthDate:
          type: string
        cityOfBirth:
          type: integer
        countryOfBirth:
          type: integer
        professionOrOccupation:
          type: integer
        nationality:
          type: integer
        homeCity:
          type: integer
        address:
          type: string
      required:
        - firstName
        - surmane
        - gender
        - birthDate
        - cityOfBirth
        - countryOfBirth
        - professionOrOccupation
        - nationality
        - homeCity
        - address
    UserUpdate:
      description: ''
      type: object
      x-examples:
        example-1:
          firstName: string
          middleName: string
          surmane: string
          secondSurname: string
          gender: string
          birthDate: string
          cityOfBirth: string
          countryOfBirth: string
          professionOrOccupation: string
          nationality: string
          homeCity: 0
          address: string
      properties:
        firstName:
          type: string
        middleName:
          type: string
        surmane:
          type: string
        secondSurname:
          type: string
        gender:
          type: string
        birthDate:
          type: string
        cityOfBirth:
          type: integer
        countryOfBirth:
          type: integer
        professionOrOccupation:
          type: integer
        nationality:
          type: integer
        homeCity:
          type: integer
        address:
          type: string
      required:
        - firstName
        - surmane
        - gender
        - birthDate
        - cityOfBirth
        - countryOfBirth
        - professionOrOccupation
        - nationality
        - homeCity
        - address
